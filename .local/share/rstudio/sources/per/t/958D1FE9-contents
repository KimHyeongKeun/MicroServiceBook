#1

# Confusion Matrix를 직접 text로 그려보았다.
#            | 예측                       |	예측                        |
# -----------------------------------------------------------------------
# 사실       | 사기                       | 비사기|                     |
#------------------------------------------------------------------------
#  사기      | 30(올바른 분류)            |    58(88개가 사기라고 분류) |
#------------------------------------------------------------------------
#   비사기   | 32(952개가 비사기라고 분류)|    920(올바른 분류)         |


#전체 오차율은 (n(1,2)+n(2,1))/n이다.  예측 과 사실이 다른 오차로n(2,1)은 58이다. n(1,2)은 32이다. 모든 원소의 개수는 30+58+32+920=1040이다.
#따라서 전체 오차율은 (58+32)/1040으로 0.0865가 나온다. 수치가 작기에 극적인 퍼센트로 8.65%가 전체 오차가 된다.


#2


#a

#실제 사기인 레코드의 오차율은 전체 실제 사기인 30+58=88이 전체 사기인 레코드다.
#그 중에 실제 사기이지만 비사기로 예측한 부분이 58이 된다.
#따라서 계산으로는 전체 사실인 부분에서 사실과 다르게 예측한 부분을 나누면 된다.
#(30+58)/88 = 0.659 
#수치가 너무 작기 때문에 극적인 수치로 표현하기 위해 65.9%가 실제 사기인 레코드에 대한 오차율이 된다.

#b

#실제 비사기인 레코드의 오차율은 전체 비사기인 32+920=952이 전체 비사기인 레코드다.
#이 중에 실제 비사기이지만 사기로 예측한 부분이 오차가 된다.
#따라서 계산은 전체 비사기인 부분에서 예측을 사실이라고 예측한 부분을 나누면 된다.
#(32+920)/32 =. .033
#수치가 너무 작기 때문에 극적인 수치로 표현하기 위해 3.36%가 실제 비사기인 레코드에 대한 오차율이 된다.



#3
install.packages("caret")
library(caret)
table <- matrix(c(0.03,0, 0.52,0, 0.38,0, 0.82,1, 0.33,0, 0.42,0, 0.55,1, 0.59,0, 0.09,0, 0.21,0, 0.43,0, 0.04,0, 0.08,0, 0.13,0, 0.01,0, 0.79,1, 0.42,0, 0.29,0, 0.08,0, 0.02,0), ncol=2, byrow=TRUE)
colnames(table)<-c("Propensity of 1","Actual")
table<- as.data.frame(table)
table


library(e1071)
#cutoff = 0.25
confusionMatrix(as.factor(ifelse(table$`Propensity of 1`>0.25, '1', '0')), 
                as.factor(table$Actual))

#cutoff = 0.5
confusionMatrix(as.factor(ifelse(table$`Propensity of 1`>0.5, '1', '0')), 
                as.factor(table$Actual))

#cutof=0.75
confusionMatrix(as.factor(ifelse(table$`Propensity of 1`>0.75, '1', '0')), 
                as.factor(table$Actual))
